VERSION 0.8

ARG --global IMAGE_NAME = otelcol
ARG --global BASE_DIR
ARG --global TAG_PREFIX

SETUP:
    FUNCTION
    WORKDIR /work
    COPY manifest.yaml /work/manifest.yaml
    COPY config.yaml /work/config.yaml

SET_DOCKER_TAGS:
    FUNCTION
    ARG EARTHLY_GIT_BRANCH
    ARG EARTHLY_GIT_SHORT_HASH
    ARG tag_prefix = ""
    LET tags = "${tag_prefix}${EARTHLY_GIT_SHORT_HASH}"
    IF [ "${EARTHLY_GIT_BRANCH}" = "main" ]
        SET tags = "${tags} ${tag_prefix}latest"
    END
    ENV DOCKER_TAGS=${tags}

TEST:
    FUNCTION
    COPY --chmod=644 config.yaml /etc/otelcol/config.yaml
    RUN [ "/otelcol", "validate", "--config=file:/etc/otelcol/config.yaml" ]

BIN:
    FUNCTION
    ARG TARGETOS
    ARG TARGETARCH
    DO +SETUP
    RUN --mount=type=cache,sharing=locked,target=/go/pkg/mod/ --mount=type=cache,target=/go-cache/ \
        CGO_ENABLED=0 GOARCH=${TARGETARCH} GOOS=${TARGETOS} builder --config /work/manifest.yaml
    ENV OTELCOL_PATH=/work/build/otelcol

SET_IMAGE_CONFIG:
    FUNCTION
    ARG image_src="https://github.com/tosuke-homelab/containers"
    ARG EARTHLY_GIT_HASH
    LABEL org.opencontainers.image.src="${image_src}"
    LABEL org.opencontainers.image.revision="${EARTHLY_GIT_HASH}"
    COPY --chmod=644 config.yaml /etc/otelcol/config.yaml
    ENTRYPOINT ["/otelcol"]
    CMD ["--config", "file:/etc/otelcol/config.yaml"]

base-image:
    FROM gcr.io/distroless/static-debian12:nonroot

test-image:
    FROM debian:bookworm-slim
    USER nobody

tools:
    FROM golang:1.22
    ENV GOMODCACHE /go/pkg/mod
    ENV GOCACHE /go-cache
    RUN --mount=type=cache,sharing=locked,target=/go/pkg/mod/ --mount=type=cache,target=/go-cache/ \
        go install go.opentelemetry.io/collector/cmd/builder@v0.97.0 && \
        go install github.com/mikefarah/yq/v4@v4.43.1
    SAVE ARTIFACT /go/bin/builder builder AS LOCAL bin/builder
    SAVE IMAGE --cache-hint

