name: OpenTelemtry Collector

on:
  push:
    branches: ["main"]
    paths:
      - otelcol/**
      - .github/workflows/**
  pull_request:
    paths:
      - otelcol/**
      - .github/workflows/**

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: docker/setup-buildx-action@v3
      - uses: docker/setup-qemu-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Go Package Cache
        uses: actions/cache@v3
        id: pkg-cache
        with:
          path: |
            go-pkg-mod
          key: go-pkg-${{ hashFiles('otelcol/router/go.sum') }}
          restore-keys: |
            go-pkg-
      - name: Inject Go Package Cache
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          cache-map: |
            {
              "go-pkg-mod": "/go/pkg/mod"
            }
          skip-extraction: ${{ steps.pkg-cache.outputs.cache-hit }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/tosuke-homelab/otelcol/router
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: "{{defaultContext}}:otelcol/router"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
