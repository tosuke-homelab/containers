name: OpenTelemtry Collector

on:
  push:
    branches: ["main"]
    paths:
      - otelcol/**
      - .github/workflows/**
  pull_request:
    paths:
      - otelcol/**
      - .github/workflows/**

jobs:
  go-checks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: otelcol/router
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: "1.22"
      - name: Cache Go modules
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-otelcol-router-${{ hashFiles('otelcol/router/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-otelcol-router-

      - name: Install deps
        run: go mod download

      - name: Run go generate
        run: go generate ./...
      - name: Check for diffs
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "There are changes after running 'go generate'."
            git diff
            exit 1
          fi

      - name: Build otelcol
        run: go build -o otelcol
      - name: Validate config
        run: ./otelcol validate --config=file:./config.yaml

  docker:
    needs: [go-checks]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3
      - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Login to ghcr.io
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Go modules
        id: go-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: |
            go-pkg-mod
            go-build
          key: docker-otelcol-router-${{ hashFiles('otelcol/router/go.sum') }}
          restore-keys: |
            docker-otelcol-router-
      - name: Inject Go Cache
        uses: reproducible-containers/buildkit-cache-dance@5b6db76d1da5c8b307d5d2e0706d266521b710de # v3
        with:
          cache-map: |
            {
              "go-build": "/root/.cache/go-build",
              "go-pkg-mod": "/go/pkg/mod"
            }
          skip-extraction: ${{ steps.go-cache.outputs.cache-hit }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          images: |
            ghcr.io/tosuke-homelab/otelcol/router
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1 # v6
        with:
          push: true
          context: "otelcol/router"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
