name: Build OpenTelemetry Collector(s)
on:
  workflow_call:
    inputs:
      push:
        type: boolean
        default: false
      images:
        type: string
        default: |
          ghcr.io/tosuke-homelab/otelcol
    secrets:
      MACKEREL_APIKEY:
        required: true

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup OpenTelemetry Collector
        id: otelcol
        env:
          MACKEREL_APIKEY: ${{ secrets.MACKEREL_APIKEY }}
          JOB_NAME: Build and Push
          JOB_TYPE: build
        run: |
          tempDir="$(mktemp -d)"
          mkdir -p "$tempDir/otelcol"
          cat > "$tempDir/otelcol/config.yaml" << EOS
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: 0.0.0.0:4317
          processors:
            batch:
            resource:
              attributes:
                - key: cicd.pipeline.name
                  action: insert
                  value: \${env:GITHUB_WORKFLOW}
                - key: cicd.pipeline.run.id
                  action: insert
                  value: \${env:GITHUB_RUN_ID}
                - key: cicd.pipeline.task.name
                  action: insert
                  value: \${env:JOB_NAME}
                - key: cicd.pipeline.task.type
                  action: insert
                  value: \${env:JOB_TYPE}
          exporters:
            otlp:
              endpoint: otlp.mackerelio.com:4317
              compression: gzip
              headers:
                Mackerel-Api-Key: \${env:MACKEREL_APIKEY}
            otlphttp:
              endpoint: https://otlp-vaxila.mackerelio.com
              headers:
                Accept: "*/*"
                "Mackerel-Api-Key": \${env:MACKEREL_APIKEY}
          service:
            pipelines:
              traces:
                receivers: [otlp]
                processors: [batch, resource]
                exporters: [otlphttp]
              metrics:
                receivers: [otlp]
                processors: [batch, resource]
                exporters: [otlp]
          EOS
          docker run -d \
            -v "$tempDir/otelcol":/etc/otelcol \
            -e MACKEREL_APIKEY -e GITHUB_WORKFLOW -e GITHUB_RUN_ID -e JOB_NAME -e JOB_TYPE \
            -p 4317:4317 \
            otel/opentelemetry-collector:0.116.1 > "$tempDir/otelcol_id"
          id="$(cat "$tempDir/otelcol_id")"
          echo "container-id=$id" >> "$GITHUB_OUTPUT"
          echo "OTEL_EXPORTER_OTLP_PROTOCOL=grpc" >> "$GITHUB_ENV"
          echo "OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317" >> "$GITHUB_ENV"
          echo "container-endpoint=$(docker inspect -f "http://{{.NetworkSettings.IPAddress}}:4317" "$id")" >> "$GITHUB_OUTPUT"
      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
        with:
          driver-opts: |
            env.OTEL_EXPORTER_OTLP_PROTOCOL=${{ env.OTEL_EXPORTER_OTLP_PROTOCOL }}
            env.OTEL_EXPORTER_OTLP_ENDPOINT=${{ steps.otelcol.outputs.container-endpoint }}
      - uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - if: inputs.push
        name: Login to ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ inputs.images }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
            type=sha
      - name: Build and push artifacts
        uses: docker/bake-action@3fc70e1131fee40a422dd8dd0ff22014ae20a1f3 # v5.11.0
        env:
          ON_DEFAULT_BRANCH: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
        with:
          push: ${{ inputs.push }}
          workdir: otelcol
          # Tags are computed from DOCKER_METADATA_OUTPUT_TAGS (See. docker/metadata-action#398)
          files: |
            docker-bake.hcl
            ${{ steps.meta.outputs.bake-file-labels }}
          set: |
            *.cache-from=type=gha
            ${{ env.ON_DEFAULT_BRANCH == 'true' && '*.cache-to=type=gha,mode=max' || '' }}
